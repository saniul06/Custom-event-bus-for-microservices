{"ast":null,"code":"var _jsxFileName = \"/media/sani/mix/Custom event bus for microservice/client/src/components/comment/CommentCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentCreate = _ref => {\n  _s();\n\n  let {\n    postId,\n    setReload\n  } = _ref;\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(`http://localhost:3002/post/${postId}/comment`, {\n        content\n      });\n      setReload(prev => !prev);\n    } catch (err) {\n      setContent('');\n      console.log('eerr is', err);\n    }\n\n    setContent('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"New comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: content,\n          className: \"form-control\",\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CommentCreate, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n\n_c = CommentCreate;\nexport default CommentCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCreate\");","map":{"version":3,"sources":["/media/sani/mix/Custom event bus for microservice/client/src/components/comment/CommentCreate.jsx"],"names":["React","useState","axios","CommentCreate","postId","setReload","content","setContent","handleSubmit","e","preventDefault","post","prev","err","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,aAAa,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA0B;AAE/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMR,KAAK,CAACS,IAAN,CAAY,8BAA6BP,MAAO,UAAhD,EAA2D;AAAEE,QAAAA;AAAF,OAA3D,CAAN;AACAD,MAAAA,SAAS,CAACO,IAAI,IAAI,CAACA,IAAV,CAAT;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZN,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD;;AACDN,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAYA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEF,OAA1B;AAAmC,UAAA,SAAS,EAAC,cAA7C;AAA4D,UAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CA3BD;;GAAMd,a;;KAAAA,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nconst CommentCreate = ({ postId, setReload }) => {\n\n  const [content, setContent] = useState('')\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      await axios.post(`http://localhost:3002/post/${postId}/comment`, { content })\n      setReload(prev => !prev)\n    } catch (err) {\n      setContent('')\n      console.log('eerr is', err)\n    }\n    setContent('')\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"\">New comment</label>\n          <input type=\"text\" value={content} className=\"form-control\" onChange={(e) => setContent(e.target.value)} />\n        </div>\n        <button className=\"btn btn-primary\">Create</button>\n      </form>\n    </>\n  )\n}\n\nexport default CommentCreate"]},"metadata":{},"sourceType":"module"}